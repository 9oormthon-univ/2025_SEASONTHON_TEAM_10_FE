module.exports = {
  root: true,
  extends: ['@react-native', '@typescript-eslint/recommended', 'prettier'],
  parser: '@typescript-eslint/parser',
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module', ecmaFeatures: { jsx: true } },
  plugins: ['@typescript-eslint', 'react', 'react-native', 'react-hooks'],
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:react/recommended',
    'plugin:react-hooks/recommended',
    'plugin:import/recommended',
    'plugin:import/typescript',
    'prettier',
  ],
  rules: {
    'react-native/no-unused-styles': 'warn',
    'react-native/split-platform-components': 'warn',
    'react-hooks/rules-of-hooks': 'error',
    'react-hooks/exhaustive-deps': 'warn',
    '@typescript-eslint/no-unused-vars': 'warn',
    '@typescript-eslint/no-explicit-any': 'warn',

    // NOTE: rules from NHN coding convention (https://ui.toast.com/fe-guide/ko_CODING-CONVENTION#%EC%A1%B0%EA%B1%B4-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0)
    semi: ['error', 'always'],
    camelcase: ['error', { properties: 'never', ignoreDestructuring: true }],
    curly: ['error', 'all'],
    eqeqeq: ['error', 'always'],
    'no-var': 'error',
    'prefer-const': 'error',
    'no-self-assign': 'error',
    'no-new-func': 'error',
    'no-inner-declarations': ['error', 'functions'],
    'prefer-template': 'error',
    'prefer-arrow-callback': 'error',
    'arrow-parens': ['error', 'as-needed'],
    'implicit-arrow-linebreak': ['error', 'beside'],
    'object-shorthand': ['error', 'always'],
    'lines-between-class-members': ['error', 'always', { exceptAfterSingleLine: true }],
    'keyword-spacing': 'error',
    'array-bracket-newline': ['error', { multiline: true, minItems: 2 }],
    'array-element-newline': ['error', { multiline: true, minItems: 2 }],
    'object-property-newline': ['error', { allowAllPropertiesOnSameLine: false }],
    'react/react-in-jsx-scope': 'off',
    'react/jsx-uses-react': 'off',
    'react/jsx-filename-extension': ['error', { extensions: ['.tsx', '.jsx'] }],
  },
  env: {
    'react-native/react-native': true,
  },
  settings: {
    react: {
      version: 'detect',
    },
  },
};
